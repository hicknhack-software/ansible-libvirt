---
- name: install packages
  ansible.builtin.apt:
    pkg:
      - resolvconf
    update_cache: yes
    state: latest
    cache_valid_time: 86400

- name: create directory
  ansible.builtin.file:
    path: "{{ libvirt_bridge_path }}"
    state: directory

- name: create config
  ansible.builtin.template:
    src: config.xml.j2
    dest: "{{ libvirt_bridge_path }}/{{ item.name }}.xml"
  loop: "{{ libvirt_bridges | list }}"
  register: configure_result

- name: check states
  ansible.builtin.command: virsh net-info {{ item.item.name }}
  failed_when: no
  changed_when: no
  register: check_states_result
  loop: "{{ configure_result.results | flatten(levels=1) }}"

- name: stop and undefine existing
  ansible.builtin.shell: >
    virsh net-destroy {{ item[0].item.name }};
    virsh net-undefine {{ item[0].item.name }}
  when: (item[1].rc == 0) and (item[0].changed)
  loop: "{{ configure_result.results  | flatten(levels=1) | zip(check_states_result.results | flatten(levels=1)) | list }}"

- name: define and start
  ansible.builtin.shell: >
    virsh net-define {{ libvirt_bridge_path }}/{{ item.item.name }}.xml &&
    virsh net-autostart {{ item.item.name }} &&
    virsh net-start {{ item.item.name }}
  when: item.changed
  loop: "{{ configure_result.results | flatten(levels=1) }}"

- name: add dnsmasq for host
  ansible.builtin.lineinfile:
    dest: "{{ libvirt_qemu_resolv_conf_head }}"
    regexp: "^nameserver"
    line: "nameserver {{ (libvirt_bridges | first).ip_address }}"
  register: nameserver_result

- name: call resolvconf
  ansible.builtin.command: "resolvconf -u"
  when: nameserver_result.changed
